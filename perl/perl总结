http://www.apelearn.com/bbs/study/27.htm （perl快速入门）
a?b:c 是条件表达式,表示如果a为真,则表达式值为b,如果a为假,则表达式值为c
0.
查看Perl的安装包安装路径 perldoc perllocal
查找要找的包
1.
FindBin 和 Cwd区别：
#!/usr/bin/perl -w
use strict;
use warnings;
use FindBin qw($Bin); 
my $root_path = $Bin; 
print "脚本的路径:$root_path\n"; 

use Cwd qw(abs_path getcwd); 
my $abs = abs_path(getcwd()); 
print "运行脚本时所在的路径:$abs\n"; 
2.
my %CDS;
while (<IN>) { 
   chomp;
   my @line= split /\t/,$_; #根据制表符分割
   if ($line[2] eq "CDS" and $line[8] =~ /Parent=(rna\d+)/){ #选出第2列是CDS，并提取隶属的mRNA的ID
   	$CDS{$1} += 1;#每找到对应mRNA下的CDS个数增加1，将mRNAID作为%CDS的键，对应CDS个数为值
   }
}
while ((my $key,my $value) = each %CDS){ #循环%CDS
	print OUT "$key\t$value\n";#将键和值存入新文件
}
哈希赋值：%CDS{$1}  （当哈希的值是标量时）
3.
哈希的键是唯一的
哈希的值赋值为数组类型：:@{$gene_intron{$line[0]}} 
提取哈希对应键的值（值为数组）：@{$gene_intron{$gene}}
对数组按数字大小排序：sort{$a<=>$b}(@line)
4.
遍历foreach
哈希：
遍历哈希的所有键：foreach my $gene (keys %gene_intron)
哈希所有值为标量：foreach my $gene (values %gene_intron)
遍历对应键的数组值：foreach my $num (@{$gene_intron{$gene}})
数组：
foreach my $num (@gene_intron)
5.
数组赋值和遍历
my @arr;
$arr[0] = "Fred"; $arr[1] = "John";
my $arr=@arr; 
print join(' ',@arr,$arr),"\n";
6.
-e File exists文件存在
-f File is a plain file文件是一个普通文件
-d File is a directory文件是一个文件夹
7.
设哈希的值为数组，并添加元素
push @{$gene_intron{$line[0]}},$line[1];
8.
截取某一部分
$str="testtest";
print substr($str,0,5);#0为起始位置，5为长度
返回值为testt
9.
defined $b
当$b有值时，返回1（真）；当$b无值时，返回0（假）；
!defined $b
相反
if(!defined $a and !defined $b and !defined $c){&help;print "Error:You must select one of (a b c)!\n";exit;}
$a,$b,$c全都没有则成立，只要有一个就不成立
10.
my @aa=("A","C","T","A","C","T","D");
my $c="OKlwer";
my @bb=("A","G","T","A","C","T","S");
my $len = @aa;
my $num = &compare(\@aa,$c); #子程序，数组类型需要在前面加\
print "$num\n";

sub compare(){
	#my ($arr1) = $_[0];
	#my (@arr1) = $_[1];
	#my (@arr2) = $_[2];
	my ($b,$d)=@_;
	my $seq=substr($d,3,2); #
	return "$seq\t$b->[0]\n";#子程序里面数组需要使用->来提取元素
}
结果返回：we	A
11.
统计文件out_pos.txt的列数
les out_pos.txt |head -n 1 |perl -lane '@a=split; print scalar @a'
12.
my $A="1	2	3	4	5	6	7	8	9	10	11	12	13	14	15	16	17	18";
my $var = (split("\t",$A,7))[5]; #7是分为7的组
结果返回6
13.
@ARGV
含义是包含了程序从命令行得到的所有参数
a.pl 10 20 30 a b c
$ARGV[0]是10
$ARGV[3]是a
14
sed -i '1i<Covariate>' $od/6_backup/$key.best_K$bestk.txt #在文件的一行插入<Covariate>，1i是第一行
15
glob--读取一个目录下的所有文件
my @sam_num = glob('/home/lsq/320G/test/*');
16
use FindBin qw($Bin $Script);
$Bin 脚本的绝对路径（全）
$Script 脚本的名字
use File::Basename qw(basename dirname);
my $sam_num = '/home/lsq/320G/test/123.txt';
basename($sam_num) 为123.txt
dirname($sam_num) 为/home/lsq/320G/test/
17
foreach my $pro (keys %project_hash){}
逐一提取哈希的键
